version: 2.1
orbs:
  gcp-gke: circleci/gcp-gke@1.3.0
  kubernetes: circleci/kubernetes@0.11.0
jobs:
  run_tests:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install --save
      - run:
          name: Run Unit Tests
          command: |
            ./node_modules/mocha/bin/mocha test/ --reporter mochawesome --reporter-options reportDir=test-results,reportFilename=test-results
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  build_docker_image:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build Docker image
          command: |
            export TAG=0.2.<< pipeline.number >>
            export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME
            docker build -t $DOCKER_LOGIN/$IMAGE_NAME -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/$IMAGE_NAME
  create_gke_autopilot:
    environment:
      CLOUDSDK_CORE_PROJECT: workshop-cicd
      CLOUDSDK_COMPUTE_REGION: us-central1
    docker:
      - image: ariv3ra/terraform-gcp:latest
    steps:
      - checkout
      - run: 
          no_output_timeout: 15m
          command: |
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/project/gcloud-service-key.json
            gcloud auth activate-service-account --key-file $HOME/project/gcloud-service-key.json
      - gcp-gke/create-cluster:
          cluster: gke-autopilot-cicd
          autopilot: true
          gcloud-service-key: GCLOUD_SERVICE_KEY
  deploy_app:
    environment:
      CLUSTER_NAME: gke-autopilot-cicd
      CLOUDSDK_CORE_PROJECT: workshop-cicd
      CLOUDSDK_COMPUTE_REGION: us-central1
    docker:
      - image: ariv3ra/terraform-gcp:latest
    steps:
      - checkout
      - run: 
          no_output_timeout: 15m
          name: Generate K8S Deployment manifest
          command: |
            export TAG=0.2.<< pipeline.number >>
            export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME:$TAG
            export DOCKER_IMAGE=$DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME:$TAG
            export APP_NAME=$CIRCLE_PROJECT_REPONAME
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/project/gcloud-service-key.json
            gcloud auth activate-service-account --key-file $HOME/project/gcloud-service-key.json
            gcloud container clusters get-credentials $CLUSTER_NAME
            sh ~/project/generate-k8s-manifest.sh $CIRCLE_PROJECT_REPONAME $DOCKER_IMAGE
            cat k8s-deployment.yaml
            kubectl apply -f k8s-deployment.yaml
            export ENDPOINT="$(kubectl get svc nodejs-circleci-service | awk '{print $4}' | tail -n1)"
            mkdir -p /tmp/gke/
            echo 'export ENDPOINT='${ENDPOINT} > /tmp/gke/gke-endpoint
      - persist_to_workspace:
          root: /tmp/gke
          paths:
            - "*"
  smoketest_gke_deployment:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/gke/
      - run:
          name: Smoke Test GKE Deployment
          command: |
            source /tmp/gke/gke-endpoint
            ./test/smoke_test $ENDPOINT
  destroy_gke_cluster:
    environment:
      CLUSTER_NAME: gke-autopilot-cicd
      CLOUDSDK_CORE_PROJECT: workshop-cicd
      CLOUDSDK_COMPUTE_REGION: us-central1
    docker:
      - image: ariv3ra/terraform-gcp:latest
    steps:
      - checkout
      - run: 
          no_output_timeout: 15m
          name: Generate K8S Deployment manifest
          command: |
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/project/gcloud-service-key.json
            gcloud auth activate-service-account --key-file $HOME/project/gcloud-service-key.json
            gcloud container clusters get-credentials $CLUSTER_NAME
      - gcp-gke/delete-cluster:
          cluster: $CLUSTER_NAME
workflows:
  build_test:
    jobs:
      - run_tests
      - build_docker_image
      - create_gke_autopilot
      - deploy_app:
          requires:
            - build_docker_image
      - smoketest_gke_deployment:
          requires:
            - deploy_app 
      - approve-destroy:
          type: approval
          requires:
            - deploy_app
            - smoketest_gke_deployment
      - destroy_gke_cluster:
          requires:
            - approve-destroy