version: 2.1
orbs:
  node: circleci/node@4.2.0
  docker: circleci/docker@1.5.0
  gcp-cli: circleci/gcp-cli@2.4.1
  terraform: circleci/terraform@3.0.0
jobs:
  run_tests:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - node/install-packages:
          override-ci-command: npm install
          cache-path: ~/project/node_modules
      - run:
          name: Run Unit Tests
          command: |
            ./node_modules/mocha/bin/mocha test/ --reporter mocha-junit-reporter --reporter-options mochaFile=./test/test-results.xml
            ./node_modules/mocha/bin/mocha test/ --reporter mochawesome --reporter-options reportDir=test-results,reportFilename=test-results
      - store_test_results:
          path: test/
      - store_artifacts:
          path: test-results
  build_docker_image:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout  
      - docker/check
      - docker/build:
          image: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
          tag: 0.1.<< pipeline.number >>
      - docker/push:
          image: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
          tag: 0.1.<< pipeline.number >>
  # insights_api_test:
  #   docker:
  #     - image: circleci/node:12
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install newman 
  #         command: sudo npm install -g newman
  #     - run:
  #         name: Run Insights Api tests with newman
  #         command: |
  #           newman run "https://api.getpostman.com/collections/4415288-047f3717-e672-4ca5-9488-cf55caf6579c?apikey="$NEWMAN_API_KEY -e "https://api.getpostman.com/environments/4415288-3f8969a7-c787-4631-b985-6c78a061f17b?apikey="$NEWMAN_API_KEY

  gke_create_cluster:
    docker:
      - image: cimg/node:14.16.0
    environment:
      CLOUDSDK_CORE_PROJECT: cicd-workshops
    steps:
      - checkout
      - gcp-cli/install
      - terraform/install:
          terraform_version: "0.12.0"
          arch: "amd64"
          os: "linux"
      - run:
          name: Create GKE Cluster
          command: |
            echo $TF_CLOUD_TOKEN | base64 -d > $HOME/.terraformrc
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/gcloud_keys
            gcloud auth activate-service-account --key-file ${HOME}/gcloud_keys
            cd terraform/gke_cluster/
            terraform init
            terraform plan -var credentials=$HOME/gcloud_keys -out=plan.txt
            terraform apply plan.txt
  gke_deploy_app:
    docker:
      - image: cimg/node:14.16.0
    environment:
      CLOUDSDK_CORE_PROJECT: cicd-workshops
    steps:
      - checkout
      - gcp-cli/install
      - terraform/install:
          terraform_version: "0.12.0"
          arch: "amd64"
          os: "linux"
      - run:
          name: Deploy App to GKE
          command: |
            export CLUSTER_NAME="cicd-workshops"
            export TAG=0.2.<< pipeline.number >>
            export DOCKER_IMAGE="docker-image=${DOCKER_LOGIN}/${CIRCLE_PROJECT_REPONAME}:$TAG"
            echo $TF_CLOUD_TOKEN | base64 -d > $HOME/.terraformrc
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/gcloud_keys
            gcloud auth activate-service-account --key-file ${HOME}/gcloud_keys
            gcloud container clusters get-credentials $CLUSTER_NAME --zone="us-east1-d"
            cd terraform/kubernetes
            terraform init
            terraform plan -var $DOCKER_IMAGE -out=plan.txt
            terraform apply plan.txt
            export ENDPOINT="$(terraform output endpoint)"
            mkdir -p /tmp/gke/
            echo 'export ENDPOINT='${ENDPOINT} > /tmp/gke/gke-endpoint
      - persist_to_workspace:
          root: /tmp/gke
          paths:
            - "*"
  smoketest_gke_deployment:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/gke/
      - run:
          name: Smoke Test GKE Deployment
          command: |
            source /tmp/gke/gke-endpoint
            ./test/smoke_test $ENDPOINT
  gke_destroy_cluster:
    docker:
      - image: cimg/node:14.16.0
    environment:
      CLOUDSDK_CORE_PROJECT: cicd-workshops
    steps:
      - checkout
      - gcp-cli/install
      - terraform/install:
          terraform_version: "0.12.0"
          arch: "amd64"
          os: "linux"
      - run:
          name: Destroy GKE Cluster
          command: |
            export CLUSTER_NAME="cicd-workshops"
            export TAG=0.2.<< pipeline.number >>
            export DOCKER_IMAGE="docker-image=${DOCKER_LOGIN}/${CIRCLE_PROJECT_REPONAME}:$TAG"            
            echo $TF_CLOUD_TOKEN | base64 -d > $HOME/.terraformrc
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/gcloud_keys
            gcloud auth activate-service-account --key-file ${HOME}/gcloud_keys
            cd terraform/kubernetes
            terraform init
            gcloud container clusters get-credentials $CLUSTER_NAME --zone="us-east1-d"            
            terraform destroy -var $DOCKER_IMAGE --auto-approve
            cd ../gke_cluster/
            terraform init
            terraform destroy -var credentials=$HOME/gcloud_keys --auto-approve
workflows:
  build_test:
    jobs:
      - run_tests
      # - insights_api_test
      - build_docker_image
      - gke_create_cluster
      - gke_deploy_app:
          requires:
            - run_tests
            - build_docker_image
            - gke_create_cluster
      - smoketest_gke_deployment:
          requires:
            - gke_deploy_app
      - approve-destroy:
          type: approval
          requires:
            - gke_create_cluster
            - gke_deploy_app
            - smoketest_gke_deployment
      - gke_destroy_cluster:
          requires:
            - approve-destroy